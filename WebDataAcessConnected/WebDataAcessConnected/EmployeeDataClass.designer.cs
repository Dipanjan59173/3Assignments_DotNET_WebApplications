#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebDataAcessConnected
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="tranning")]
	public partial class EmployeeDataClassDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEmployeTbl(EmployeTbl instance);
    partial void UpdateEmployeTbl(EmployeTbl instance);
    partial void DeleteEmployeTbl(EmployeTbl instance);
    #endregion
		
		public EmployeeDataClassDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["tranningConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeDataClassDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeDataClassDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeDataClassDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeDataClassDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EmployeTbl> EmployeTbls
		{
			get
			{
				return this.GetTable<EmployeTbl>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sp_searchEmp")]
		public ISingleResult<Sp_searchEmpResult> Sp_searchEmp([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> empid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empid);
			return ((ISingleResult<Sp_searchEmpResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeTbl")]
	public partial class EmployeTbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _empId;
		
		private string _empName;
		
		private System.Nullable<float> _empSal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempIdChanging(int value);
    partial void OnempIdChanged();
    partial void OnempNameChanging(string value);
    partial void OnempNameChanged();
    partial void OnempSalChanging(System.Nullable<float> value);
    partial void OnempSalChanged();
    #endregion
		
		public EmployeTbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int empId
		{
			get
			{
				return this._empId;
			}
			set
			{
				if ((this._empId != value))
				{
					this.OnempIdChanging(value);
					this.SendPropertyChanging();
					this._empId = value;
					this.SendPropertyChanged("empId");
					this.OnempIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empName", DbType="VarChar(20)")]
		public string empName
		{
			get
			{
				return this._empName;
			}
			set
			{
				if ((this._empName != value))
				{
					this.OnempNameChanging(value);
					this.SendPropertyChanging();
					this._empName = value;
					this.SendPropertyChanged("empName");
					this.OnempNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empSal", DbType="Real")]
		public System.Nullable<float> empSal
		{
			get
			{
				return this._empSal;
			}
			set
			{
				if ((this._empSal != value))
				{
					this.OnempSalChanging(value);
					this.SendPropertyChanging();
					this._empSal = value;
					this.SendPropertyChanged("empSal");
					this.OnempSalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Sp_searchEmpResult
	{
		
		private int _empId;
		
		private string _empName;
		
		private System.Nullable<float> _empSal;
		
		public Sp_searchEmpResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empId", DbType="Int NOT NULL")]
		public int empId
		{
			get
			{
				return this._empId;
			}
			set
			{
				if ((this._empId != value))
				{
					this._empId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empName", DbType="VarChar(20)")]
		public string empName
		{
			get
			{
				return this._empName;
			}
			set
			{
				if ((this._empName != value))
				{
					this._empName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empSal", DbType="Real")]
		public System.Nullable<float> empSal
		{
			get
			{
				return this._empSal;
			}
			set
			{
				if ((this._empSal != value))
				{
					this._empSal = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
